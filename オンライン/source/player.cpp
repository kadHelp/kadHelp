#include	"iextreme.h"
#include	"system/system.h"
#include	"sceneMain.h"

//*****************************************************************************************************************************
//
//		プレイヤークラス
//
//*****************************************************************************************************************************

//*****************************************************************************************************************************
//	初期化・解放
//*****************************************************************************************************************************
//------------------------------------------------------
//	初期化・解放
//------------------------------------------------------
cPlayer::cPlayer( iex3DObj* obj )
{
	this->obj = obj;
	this->obj->SetPos(Vector3(0,0,0));
	this->obj->SetScale(0.013f);
	this->obj->SetMotion(0);
	//	初期設定
	this->pos = pos;
	angle = .0f;
}

cPlayer::~cPlayer()
{
	delete	obj;
}

//*****************************************************************************************************************************
//	更新
//*****************************************************************************************************************************
bool cPlayer::Update( PlayerParam& param )
{
	pos   = param.pos;
	angle = param.angle;

	for( int i=0 ; i<3 ; i++ ) obj->Animation();
	if( obj->GetMotion() != param.motion ) obj->SetMotion(param.motion);

	//	床判定
	float floor = sceneMain::GetFloor(pos);
	pos.y = floor;
	//	情報更新
	obj->SetPos( pos );
	obj->SetAngle(angle);

	return true;
}

//*****************************************************************************************************************************
//	描画
//*****************************************************************************************************************************
void cPlayer::Render()
{
	obj->Update();
	obj->Render();
}

//*****************************************************************************************************************************
//
//		プレイヤー管理クラス
//
//*****************************************************************************************************************************

//*****************************************************************************************************************************
//	初期化・解放
//*****************************************************************************************************************************
//------------------------------------------------------
//	初期化
//------------------------------------------------------
cPlayerManager::cPlayerManager( cGameParam* gameParam )
{
	this->gameParam = gameParam; 
	//	全プレイヤー初期化
	for( int p=0 ; p<PLAYER_MAX ; p++ )
	{
		player[p] = NULL;
	}
	//	元モデル読み込み
	obj[0] = new iex3DObj("DATA\\PLAYER\\PLAYER01.IEM");
	obj[1] = new iex3DObj("DATA\\PLAYER\\PLAYER02.IEM");
	obj[2] = new iex3DObj("DATA\\PLAYER\\PLAYER03.IEM");
	obj[3] = new iex3DObj("DATA\\PLAYER\\PLAYER04.IEM");
	obj[4] = new iex3DObj("DATA\\PLAYER\\PLAYER05.IEM");
}

//------------------------------------------------------
//	解放
//------------------------------------------------------
cPlayerManager::~cPlayerManager()
{
	//	全プレイヤー解放
	for( int p=0 ; p<PLAYER_MAX ; p++ )
	{
		if( player[p] != NULL ) delete player[p];
	}

	delete obj[0];
	delete obj[1];
	delete obj[2];
	delete obj[3];
	delete obj[4];
}

//*****************************************************************************************************************************
//	更新
//*****************************************************************************************************************************
void cPlayerManager::Update()
{
	//	全プレイヤー更新
	for( int p=0 ; p<PLAYER_MAX ; p++ )
	{
		//	存在チェック
		if( player[p] == NULL ) continue;
		
		//	プレイヤー更新
		if( player[p]->Update( gameParam->getPlayerParam(p) ) == false )
		{
			delete player[p];
			player[p] = NULL;
		}
	}
}


//*****************************************************************************************************************************
//	描画
//*****************************************************************************************************************************
void cPlayerManager::Render()
{
	//	全プレイヤー描画
	for( int p=0 ; p<PLAYER_MAX ; p++ )
	{
		//	存在チェック
		if( player[p] == NULL ) continue;
		//	プレイヤー描画
		player[p]->Render();
	}
}

void cPlayerManager::RenderName()
{
	//	全プレイヤー描画
	for( int p=0 ; p<PLAYER_MAX ; p++ )
	{
		if( player[p] == NULL ) continue;

		Matrix	mat;
		Vector3	v = get2DPos(p);
		if( v.z < .0f ) continue;
		//		名前描画
		char* name = gameParam->getPlayerName(p);
		IEX_DrawText( name, (int)v.x-lstrlen(name)*4, (int)v.y-20, 256, 16, 0xFFFFFF00 );
	}
}

//*****************************************************************************************************************************
//	２Ｄ座標取得
//*****************************************************************************************************************************
Vector3 cPlayerManager::get2DPos( int id )
{
	Vector3	v(0,-1000,0);
	if( player[id] == NULL ) return v;

	Matrix	mat;

	Vector3 pos = player[id]->getPos() + Vector3( 0, 2.3f, 0);
	//	座標変換３Ｄ→２Ｄ
	mat = matView * matProjection;
	
	float w = (pos.x*mat._14 + pos.y*mat._24 + pos.z*mat._34 + mat._44);
	v.x = (pos.x*mat._11 + pos.y*mat._21 + pos.z*mat._31 + mat._41) / w;
	v.y = (pos.x*mat._12 + pos.y*mat._22 + pos.z*mat._32 + mat._42) / w;
	v.z = (pos.x*mat._13 + pos.y*mat._23 + pos.z*mat._33 + mat._43);

	v.x =  v.x * 640 + 640;
	v.y = -v.y * 360 + 360;

	return v;
}

//*****************************************************************************************************************************
//	プレイヤー生成
//*****************************************************************************************************************************
void cPlayerManager::Set( int id, int type )
{
	//	存在チェック
	if( player[id] != NULL ) return;
	//	プレイヤー生成
	player[id] = new cPlayer( obj[type]->Clone() );
}

//*****************************************************************************************************************************
//	プレイヤー削除
//*****************************************************************************************************************************
void cPlayerManager::Remove( int id )
{
	//	存在チェック
	if( player[id] != NULL ) return;
	//	プレイヤー
	delete player[id]; player[id] = NULL;
}
