#include	"iextreme.h"
#include	"system/system.h"
#include	"sceneMain.h"

//*****************************************************************************
//
//		チャットクラス
//
//*****************************************************************************

//*****************************************************************************************************************************
//		初期化・解放
//*****************************************************************************************************************************
cChat::cChat()
{
	//	チャット初期化
	for( int p=0 ; p<PLAYER_MAX ; p++ ) chat[p].count = 0;
	//	ログ初期化
	for( int i=0 ; i<LOG_MAX ; i++ ){
		strcpy( Log[i].Name, "" );
		strcpy( Log[i].Mes,  "" );
	}
}

//*****************************************************************************************************************************
//		更新
//*****************************************************************************************************************************
void cChat::Update()
{
	for( int p=0 ; p<PLAYER_MAX ; p++ )
	{
		if( chat[p].count > 0 ) chat[p].count--;
	}
}

//*****************************************************************************************************************************
//		セット
//*****************************************************************************************************************************
void cChat::Set( int id, char* name, char* msg )
{
	chat[id].count = 100;
	strcpy( chat[id].msg, msg );

	//	ログ保存		
	for( int i=LOG_MAX-1 ; i>0 ; i-- ){
		strcpy( Log[i].Name, Log[i-1].Name );
		strcpy( Log[i].Mes,  Log[i-1].Mes );
	}
	strcpy( Log[0].Name, name );
	strcpy( Log[0].Mes,  msg );
}

//*****************************************************************************************************************************
//		描画
//*****************************************************************************************************************************
void cChat::Render( char* curMes )
{
	//	チャット描画
	for( int p=0 ; p<PLAYER_MAX ; p++ )
	{
		if( chat[p].count <= 0 ) continue;

		//	チャットウィンドウサイズ計算
		int	ww, wh;
		int l = lstrlen( chat[p].msg );
		if( l > 24 ){
			ww = 192;
			wh = 32;
		} else {
			ww = l*8;
			wh = 16;
		}

		Vector3	pos = sceneMain::getPlayer2DPos(p);
		//	ウィンドウ描画
		IEX_DrawRect( (int)pos.x-(ww/2+4), (int)pos.y-wh-24, ww+8, wh+8, RS_COPY, 0x80000080 );
		//	文字列描画
		IEX_DrawText( chat[p].msg, (int)pos.x-(ww/2), (int)pos.y-wh-20, ww, wh, 0xFFFFFFFF );
	}
	//	ログの描画
	RenderLog();

	//	現メッセージの描画
	IEX_DrawText( curMes, 40, 680, 1200, 30, 0xFFFFFFFF );
}

//------------------------------------------------------
//		ログ描画
//------------------------------------------------------
void	cChat::RenderLog()
{
	int		i, x, y;

	y = 640;
	for( i=0 ; i<LOG_MAX ; i++ ){
		if( lstrlen(Log[i].Mes) > 24 ) y -= 12;
		//	名前描画
		IEX_DrawText( Log[i].Name, 80, y,  96, 12, 0xFFFF0000, TRUE );
		x = lstrlen(Log[i].Name)*6 + 88;
		//	メッセージ描画
		IEX_DrawText( Log[i].Mes, x, y, 144, 24, 0xFFFFFFFF, TRUE );
		y -= 12;
		if( y < 440-12*12 ) break;
	}
}

